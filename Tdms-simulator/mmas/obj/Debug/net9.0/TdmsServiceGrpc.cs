// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: tdms_service.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace TdmsService {
  public static partial class TdmsService
  {
    static readonly string __ServiceName = "tdms_service.TdmsService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TdmsService.TdmsReadRequest> __Marshaller_tdms_service_TdmsReadRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TdmsService.TdmsReadRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TdmsService.TdmsReadResponse> __Marshaller_tdms_service_TdmsReadResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TdmsService.TdmsReadResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TdmsService.TdmsSendRequest> __Marshaller_tdms_service_TdmsSendRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TdmsService.TdmsSendRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TdmsService.TdmsSendResponse> __Marshaller_tdms_service_TdmsSendResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TdmsService.TdmsSendResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TdmsService.DataReceivedRequest> __Marshaller_tdms_service_DataReceivedRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TdmsService.DataReceivedRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::TdmsService.DataReceivedResponse> __Marshaller_tdms_service_DataReceivedResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::TdmsService.DataReceivedResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TdmsService.TdmsReadRequest, global::TdmsService.TdmsReadResponse> __Method_ReadTdms = new grpc::Method<global::TdmsService.TdmsReadRequest, global::TdmsService.TdmsReadResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "ReadTdms",
        __Marshaller_tdms_service_TdmsReadRequest,
        __Marshaller_tdms_service_TdmsReadResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TdmsService.TdmsSendRequest, global::TdmsService.TdmsSendResponse> __Method_SendTdms = new grpc::Method<global::TdmsService.TdmsSendRequest, global::TdmsService.TdmsSendResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendTdms",
        __Marshaller_tdms_service_TdmsSendRequest,
        __Marshaller_tdms_service_TdmsSendResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::TdmsService.DataReceivedRequest, global::TdmsService.DataReceivedResponse> __Method_ReceivedData = new grpc::Method<global::TdmsService.DataReceivedRequest, global::TdmsService.DataReceivedResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReceivedData",
        __Marshaller_tdms_service_DataReceivedRequest,
        __Marshaller_tdms_service_DataReceivedResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::TdmsService.TdmsServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for TdmsService</summary>
    public partial class TdmsServiceClient : grpc::ClientBase<TdmsServiceClient>
    {
      /// <summary>Creates a new client for TdmsService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public TdmsServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for TdmsService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public TdmsServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected TdmsServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected TdmsServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// üîπ TDMS Îç∞Ïù¥ÌÑ∞ ÏùΩÍ∏∞
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::TdmsService.TdmsReadResponse> ReadTdms(global::TdmsService.TdmsReadRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReadTdms(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// üîπ TDMS Îç∞Ïù¥ÌÑ∞ ÏùΩÍ∏∞
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::TdmsService.TdmsReadResponse> ReadTdms(global::TdmsService.TdmsReadRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_ReadTdms, null, options, request);
      }
      /// <summary>
      /// üîπ C#Ïù¥ Î∞õÏùÄ Îç∞Ïù¥ÌÑ∞Î•º AI ÏÑúÎ≤ÑÎ°ú Ï†ÑÏÜ°
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TdmsService.TdmsSendResponse SendTdms(global::TdmsService.TdmsSendRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendTdms(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// üîπ C#Ïù¥ Î∞õÏùÄ Îç∞Ïù¥ÌÑ∞Î•º AI ÏÑúÎ≤ÑÎ°ú Ï†ÑÏÜ°
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TdmsService.TdmsSendResponse SendTdms(global::TdmsService.TdmsSendRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendTdms, null, options, request);
      }
      /// <summary>
      /// üîπ C#Ïù¥ Î∞õÏùÄ Îç∞Ïù¥ÌÑ∞Î•º AI ÏÑúÎ≤ÑÎ°ú Ï†ÑÏÜ°
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TdmsService.TdmsSendResponse> SendTdmsAsync(global::TdmsService.TdmsSendRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendTdmsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// üîπ C#Ïù¥ Î∞õÏùÄ Îç∞Ïù¥ÌÑ∞Î•º AI ÏÑúÎ≤ÑÎ°ú Ï†ÑÏÜ°
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TdmsService.TdmsSendResponse> SendTdmsAsync(global::TdmsService.TdmsSendRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendTdms, null, options, request);
      }
      /// <summary>
      /// üîπ AI ServerÏóêÏÑú Inference Í≤∞Í≥º Í∞ÄÏ†∏Ïò§Í∏∞
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TdmsService.DataReceivedResponse ReceivedData(global::TdmsService.DataReceivedRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReceivedData(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// üîπ AI ServerÏóêÏÑú Inference Í≤∞Í≥º Í∞ÄÏ†∏Ïò§Í∏∞
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::TdmsService.DataReceivedResponse ReceivedData(global::TdmsService.DataReceivedRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReceivedData, null, options, request);
      }
      /// <summary>
      /// üîπ AI ServerÏóêÏÑú Inference Í≤∞Í≥º Í∞ÄÏ†∏Ïò§Í∏∞
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TdmsService.DataReceivedResponse> ReceivedDataAsync(global::TdmsService.DataReceivedRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReceivedDataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// üîπ AI ServerÏóêÏÑú Inference Í≤∞Í≥º Í∞ÄÏ†∏Ïò§Í∏∞
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::TdmsService.DataReceivedResponse> ReceivedDataAsync(global::TdmsService.DataReceivedRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReceivedData, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override TdmsServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new TdmsServiceClient(configuration);
      }
    }

  }
}
#endregion
